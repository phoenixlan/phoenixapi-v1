"""Password reset code

Revision ID: 428c56eeef7b
Revises: 69f2b77c9ef1
Create Date: 2022-08-11 08:35:24.034127

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '428c56eeef7b'
down_revision = '69f2b77c9ef1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('password_reset_code',
    sa.Column('code', sa.Text(), nullable=False),
    sa.Column('client_id', sa.Text(), nullable=True),
    sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], name=op.f('fk_password_reset_code_user_uuid_user')),
    sa.PrimaryKeyConstraint('code', name=op.f('pk_password_reset_code'))
    )
    op.create_unique_constraint(op.f('uq_agenda_entry_uuid'), 'agenda_entry', ['uuid'])
    op.create_unique_constraint(op.f('uq_application_uuid'), 'application', ['uuid'])
    op.create_unique_constraint(op.f('uq_avatar_uuid'), 'avatar', ['uuid'])
    op.create_unique_constraint(op.f('uq_crew_uuid'), 'crew', ['uuid'])
    op.create_unique_constraint(op.f('uq_entrance_uuid'), 'entrance', ['uuid'])
    op.create_unique_constraint(op.f('uq_event_uuid'), 'event', ['uuid'])
    op.create_unique_constraint(op.f('uq_oauth_code_code'), 'oauth_code', ['code'])
    op.create_unique_constraint(op.f('uq_oauth_refresh_token_token'), 'oauth_refresh_token', ['token'])
    op.create_unique_constraint(op.f('uq_payment_uuid'), 'payment', ['uuid'])
    op.create_unique_constraint(op.f('uq_permission_binding_uuid'), 'permission_binding', ['uuid'])
    op.create_unique_constraint(op.f('uq_position_uuid'), 'position', ['uuid'])
    op.create_unique_constraint(op.f('uq_row_uuid'), 'row', ['uuid'])
    op.create_unique_constraint(op.f('uq_seat_uuid'), 'seat', ['uuid'])
    op.create_unique_constraint(op.f('uq_seatmap_uuid'), 'seatmap', ['uuid'])
    op.create_unique_constraint(op.f('uq_seatmap_background_uuid'), 'seatmap_background', ['uuid'])
    op.create_unique_constraint(op.f('uq_store_session_uuid'), 'store_session', ['uuid'])
    op.create_unique_constraint(op.f('uq_team_uuid'), 'team', ['uuid'])
    op.create_unique_constraint(op.f('uq_ticket_type_uuid'), 'ticket_type', ['uuid'])
    op.create_unique_constraint(op.f('uq_user_uuid'), 'user', ['uuid'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('uq_user_uuid'), 'user', type_='unique')
    op.drop_constraint(op.f('uq_ticket_type_uuid'), 'ticket_type', type_='unique')
    op.drop_constraint(op.f('uq_team_uuid'), 'team', type_='unique')
    op.drop_constraint(op.f('uq_store_session_uuid'), 'store_session', type_='unique')
    op.drop_constraint(op.f('uq_seatmap_background_uuid'), 'seatmap_background', type_='unique')
    op.drop_constraint(op.f('uq_seatmap_uuid'), 'seatmap', type_='unique')
    op.drop_constraint(op.f('uq_seat_uuid'), 'seat', type_='unique')
    op.drop_constraint(op.f('uq_row_uuid'), 'row', type_='unique')
    op.drop_constraint(op.f('uq_position_uuid'), 'position', type_='unique')
    op.drop_constraint(op.f('uq_permission_binding_uuid'), 'permission_binding', type_='unique')
    op.drop_constraint(op.f('uq_payment_uuid'), 'payment', type_='unique')
    op.drop_constraint(op.f('uq_oauth_refresh_token_token'), 'oauth_refresh_token', type_='unique')
    op.drop_constraint(op.f('uq_oauth_code_code'), 'oauth_code', type_='unique')
    op.drop_constraint(op.f('uq_event_uuid'), 'event', type_='unique')
    op.drop_constraint(op.f('uq_entrance_uuid'), 'entrance', type_='unique')
    op.drop_constraint(op.f('uq_crew_uuid'), 'crew', type_='unique')
    op.drop_constraint(op.f('uq_avatar_uuid'), 'avatar', type_='unique')
    op.drop_constraint(op.f('uq_application_uuid'), 'application', type_='unique')
    op.drop_constraint(op.f('uq_agenda_entry_uuid'), 'agenda_entry', type_='unique')
    op.drop_table('password_reset_code')
    # ### end Alembic commands ###
